package com.di.web;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.di.dto.Exposer;
import com.di.dto.SeckillExecution;
import com.di.dto.SeckillResult;
import com.di.entity.Seckill;
import com.di.enums.SeckillStatEnum;
import com.di.exception.RepeatKillException;
import com.di.exception.SeckillCloseException;
import com.di.service.SeckillService;

@Component
@RequestMapping("/seckill")
public class SeckillController{
	@Autowired
	private SeckillService seckillService;
	
	@RequestMapping(value = "/list",method = RequestMethod.GET)
	public String list(Model model){
		List<Seckill> list = seckillService.getSeckillList();
		model.addAttribute("list", list);
		return "list";
	}
	
	@RequestMapping(value = "/{seckillId}/detail",method = RequestMethod.GET)
	public String detail(@PathVariable("seckillId") Long seckillId, Model model){
		
		if(seckillId == null){
			return "redirect:/seckill/list";
		}
		
		Seckill seckill = seckillService.getById(seckillId);
		if(seckill == null){
			return "forward:/seckill/list";
		}
		
		model.addAttribute("seckill",seckill);
		return "detail";
	}
	/*
	@RequestMapping(value="/{seckillId}/exposer",
					method = RequestMethod.POST,
					produces = {"application/json;charset = UTF-8"})
	@ResponseBody
	public SeckillResult<Exposer> exposer(Long seckillId){
		SeckillResult<Exposer> result;
		try{
			Exposer exposer = seckillService.exportSeckillUrl(seckillId);
			result = new SeckillResult<Exposer>(true,exposer);
		}catch(Exception e){
			e.printStackTrace();
			result = new SeckillResult<Exposer>(false,e.getMessage());
		}
		
		return result;
	}
	
	@RequestMapping(value="/{seckillId}/{md5}/execution",
					method = RequestMethod.POST,
					produces = {"application/json;charset=UTF-8"})
	@ResponseBody
	public SeckillResult<SeckillExecution> execute(@PathVariable("seckillId") Long seckillId,
													@PathVariable("md5")String md5,
													@CookieValue(value = "killPhone",required = false)Long phone){
		if(phone==null){
			return new SeckillResult<SeckillExecution>(false,"not regist");
		}
		SeckillResult<SeckillExecution> result;
		try{
			SeckillExecution execution = seckillService.executeSeckill(seckillId, phone, md5);
			return new SeckillResult<SeckillExecution>(true,execution);
		}catch(RepeatKillException e1)
		{
			SeckillExecution execution = new SeckillExecution(seckillId,SeckillStatEnum.REPEAT_KILL);
			return new SeckillResult<SeckillExecution>(false,execution);
		}catch(SeckillCloseException e2){
			SeckillExecution execution = new SeckillExecution(seckillId,SeckillStatEnum.END);
			return new SeckillResult<SeckillExecution>(false,execution);
		}catch(Exception e){
			SeckillExecution execution = new SeckillExecution(seckillId,SeckillStatEnum.INNER_ERROR);
			return new SeckillResult<SeckillExecution>(false,execution);
		}
		
	}
	*/
	@RequestMapping(value="/time/now",method=RequestMethod.GET)
	public SeckillResult<Long> time(){
		Date now = new Date();
		return new SeckillResult<Long>(true,now.getTime());
	}
	
	
	
}





