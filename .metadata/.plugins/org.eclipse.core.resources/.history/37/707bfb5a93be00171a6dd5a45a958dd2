package com.di.service.impl;

import java.util.Date;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.util.DigestUtils;

import com.di.dao.SeckillDao;
import com.di.dao.SuccessKilledDao;
import com.di.dto.Exposer;
import com.di.entity.Seckill;
import com.di.service.*;

public class SeckillServiceImpl implements SeckillService{
	private Logger logger = LoggerFactory.getLogger(this.getClass());
	//salt for encryption
	private final String salt = "shsdssljdd'l.";
	
	@Autowired
	private SeckillDao seckillDao;
	
	@Autowired
	private SuccessKilledDao successKilledDao;
	
	public List<Seckill> getSeckillList(){
		return seckillDao.queryAll(0,4);
	}
	
	public Seckill getById(long seckillId){
		return seckillDao.queryById(seckillId);
	}
	
	public Exposer exportSeckillUrl(long seckillId){
		Seckill seckill = seckillDao.queryById(seckillId);
		if(seckill == null)//cannot find the detail of the prodect
		{
			return new Exposer(false,seckillId);
		}
		// seckill has not been launched yet
		Date startTime = seckill.getStartTime();
		Date endTime = seckill.getEndTime();
		
		Date nowTime = new Date();
		if(startTime.getTime()>nowTime.getTime()||endTime.getTime()<nowTime.getTime())
		{
			return new Exposer(false,seckillId,nowTime.getTime(),startTime.getTime(),endTime.getTime());
		}
		String md5 = getMD5(seckillId);
		return new Exposer(true,md5,seckillId);	
	}
	
	private String getMD5(long seckillId)
	{
		String base = seckillId + "/" +salt;
		String md5 = DigestUtils.md5DigestAsHex(base.getBytes());
		return md5;
	}
}







